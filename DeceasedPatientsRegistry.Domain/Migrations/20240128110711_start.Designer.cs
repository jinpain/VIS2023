// <auto-generated />
using System;
using DeceasedPatientsRegistry.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeceasedPatientsRegistry.Domain.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240128110711_start")]
    partial class start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DeceasedPatientsRegistry.Domain.Entities.Archive", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Archives");
                });

            modelBuilder.Entity("DeceasedPatientsRegistry.Domain.Entities.ConclusionKILI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CauseDefect")
                        .HasColumnType("longtext");

                    b.Property<string>("ConnectionDefectAndDeath")
                        .HasColumnType("longtext");

                    b.Property<string>("RecommendationsKILI")
                        .HasColumnType("longtext");

                    b.Property<string>("SolutionKILI")
                        .HasColumnType("longtext");

                    b.Property<string>("WhoMadeDefect")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ConclusionsKILI");
                });

            modelBuilder.Entity("DeceasedPatientsRegistry.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DeceasedPatientsRegistry.Domain.Entities.Logs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<string>("MedicalHistoryNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("DeceasedPatientsRegistry.Domain.Entities.MedicalHistoryRouteMap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("LocationMedicalHistory")
                        .HasColumnType("int");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Specialist")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MedicalHistoryRouteMaps");
                });

            modelBuilder.Entity("DeceasedPatientsRegistry.Domain.Entities.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("DeceasedPatientsRegistry.Domain.Entities.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ArchiveName")
                        .HasColumnType("longtext");

                    b.Property<int>("AutopsyType")
                        .HasColumnType("int");

                    b.Property<Guid?>("ConclusionKILIId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DateArchiving")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateDeath")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateInKILI")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateInKKMP")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateInSecretaryKILI")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateMeetingKILI")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateRegistration")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateTransferKILI")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("longtext");

                    b.Property<bool>("Expertise")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Firstname")
                        .HasColumnType("longtext");

                    b.Property<string>("IncuranceCompany")
                        .HasColumnType("longtext");

                    b.Property<string>("IncuranceNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Lastname")
                        .HasColumnType("longtext");

                    b.Property<int?>("LocationMedicalHistory")
                        .HasColumnType("int");

                    b.Property<string>("MainDepartmentName")
                        .HasColumnType("longtext");

                    b.Property<string>("MedicalHistoryNumber")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("NoteArchiveId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("NoteKILIId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("NoteKKMPId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Oncology")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ReportId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("DeceasedPatientsRegistry.Domain.Entities.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Inspector")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("DeceasedPatientsRegistry.Domain.Entities.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Firstname")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Lastname")
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Staff");
                });
#pragma warning restore 612, 618
        }
    }
}
