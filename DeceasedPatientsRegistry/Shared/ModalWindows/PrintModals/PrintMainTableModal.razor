<div class="modal fade" id="printMainTableModal" data-bs-keyboard="false">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <div class="d-flex">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Предварительный просмотр документа</h1>
                    <div class="px-2">
                        <button class="btn btn-sm btn-success bi bi-printer-fill" onclick="callPrint('print-table')" />
                    </div>
                    <button onclick="htmlTableToExcel()" class="btn btn-sm btn-primary bi bi-file-earmark-arrow-down-fill" />
                </div>
                <div>
                    <button type="button" class="btn btn-sm btn-secondary" @onclick="() => ClosePrintMainTable.InvokeAsync(false)" data-bs-dismiss="modal">Закрыть</button>
                </div>
            </div>
            <div class="modal-body" id="print-table">
                @if (IsOpen)
                {
                    <table class="table table-sm table-bordered border-black" id="tblToExcl" style="font-size:x-small">
                        <thead>
                            <tr>
                                <th>Вскрытие</th>
                                <th>Фамилия</th>
                                <th>Имя</th>
                                <th>Отчество</th>
                                <th>№ ИБ</th>
                                <th>Отделение по разноске</th>
                                <th>Дата смерти</th>
                                <th>ОНКО</th>
                                <th>Дата рег. ИБ в архиве</th>
                                <th>Дата возврата ИБ в архив на хранение</th>
                                <th>Дата поступления ИБ в отдел ККМП</th>
                                <th>Дата передачи секретарю КИЛИ</th>
                                <th>Дата поступления ИБ на КИЛИ</th>
                                <th>Дата передачи председателю КИЛИ</th>
                                <th>Заседание КИЛИ</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in DataManager.GetCachedData())
                            {
                                <tr>
                                    <td>
                                        @item.AutopsyType
                                    </td>
                                    <td>
                                        @item.Lastname
                                    </td>
                                    <td>
                                        @item.Firstname
                                    </td>
                                    <td>
                                        @item.Surname
                                    </td>
                                    <td>
                                        @item.MedicalHistoryNumber
                                    </td>
                                    <td>
                                        @item.DepartmentName
                                    </td>
                                    <td>
                                        @DateTimeExtension.ToDateTimeFormatStringOrEmpty(item.DateDeath, "dd.MM.yyyy HH:mm")
                                    </td>
                                    <td>
                                        @(item.Oncology ? "Да" : "Нет")
                                    </td>
                                    <td>
                                        @DateTimeExtension.ToShortDateStringOrEmpty(item.DateRegistration)
                                    </td>
                                    <td>
                                        @DateTimeExtension.ToShortDateStringOrEmpty(item.DateArchiving)
                                    </td>
                                    <td>
                                        @DateTimeExtension.ToShortDateStringOrEmpty(item.DateInKKMP)
                                    </td>
                                    <td>
                                        @DateTimeExtension.ToShortDateStringOrEmpty(item.DateInSecretaryKILI)
                                    </td>
                                    <td>
                                        @DateTimeExtension.ToShortDateStringOrEmpty(item.DateInKILI)
                                    </td>
                                    <td>
                                        @DateTimeExtension.ToShortDateStringOrEmpty(item.DateTransferKILI)
                                    </td>
                                    <td>
                                        @DateTimeExtension.ToShortDateStringOrEmpty(item.DateMeetingKILI)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
</div>

@code 
{
    [Parameter]
    public bool IsOpen { get; set; } = false;
    [Parameter]
    public DataManager<Patient,PatientFilter> DataManager { get; set; }
    [Parameter]
    public EventCallback<bool> ClosePrintMainTable { get; set; }

    [Inject]
    private HeadersFilterTable _headersFilterTable { get; set; }

    private List<Patient> Filter()
    {
        IQueryable<Patient> patients = DataManager.GetCachedData().Where(x => x.IsDeleted == DataManager.Filter.IsDeleted).AsQueryable();
        if (DataManager.Filter != null)
        {
            if (DataManager.Filter.DateDeathFrom != null)
                patients = patients.Where(x => x.DateDeath >= DataManager.Filter.DateDeathFrom);
            if (DataManager.Filter.DateDeathTo != null)
                patients = patients.Where(x => x.DateDeath <= DataManager.Filter.DateDeathTo);
            if (!string.IsNullOrEmpty(DataManager.Filter.Lastname))
                patients = patients.Where(x => x.Lastname.Contains(DataManager.Filter.Lastname));
            if (!string.IsNullOrEmpty(DataManager.Filter.Firstname))
                patients = patients.Where(x => x.Firstname.Contains(DataManager.Filter.Firstname));
            if (!string.IsNullOrEmpty(DataManager.Filter.Surname))
                patients = patients.Where(x => x.Surname.Contains(DataManager.Filter.Surname));
            if (!string.IsNullOrEmpty(DataManager.Filter.MedicalHistoryNumber))
                patients = patients.Where(x => x.MedicalHistoryNumber == DataManager.Filter.MedicalHistoryNumber);
        }
        return _headersFilterTable.Filter(patients.ToList());
    }
}
