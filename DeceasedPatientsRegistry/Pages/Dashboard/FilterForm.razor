<div style="position:relative">
    <span class="text-success bi bi-funnel-fill" type="button" data-bs-toggle="dropdown" data-bs-auto-close="outside" style="position:absolute;width:100%;height:100%">
        @if (HeadersFilterTable.HasAnyFilterOptionFalse(Key))
        {
            <i class="text-danger bi bi-exclamation-diamond-fill"></i>
        }
    </span>
    <ul class="dropdown-menu" style="max-height:300px;min-width:300px;overflow-x:hidden;">
        <li>
            <div class="row">
                <div class="col text-center">
                    <span @onclick="() => SwitchAllCheckBox(true)" type="button">Выбрать все</span>
                </div>
                <div class="col text-center">
                    <span @onclick="() => SwitchAllCheckBox(false)" type="button">Убрать все</span>
                </div>
            </div>
        </li>
        @foreach (var item in HeadersFilterTable.GetFilterValue(Key))
        {
            <li>
                <label class="dropdown-item">
                    @if(item.Item2)
                    {
                        <input @onchange="e => OnchangeCheckbox(item.Item1, Convert.ToBoolean(e.Value.ToString()))" class="form-check-input" type="checkbox" id="@item.Item1" checked />
                    }
                    else
                    {
                        <input @onchange="e => OnchangeCheckbox(item.Item1, Convert.ToBoolean(e.Value.ToString()))" class="form-check-input" type="checkbox" id="@item.Item1" />
                    }
                    <span class="px-1">@item.Item1</span>
                </label>
            </li>
        }
    </ul>
    <br />
    @Key
</div>

@code
{
    [Parameter]
    public HeadersFilterTable HeadersFilterTable { get; set; }
    [Parameter]
    public string Key { get; set; }
    [Parameter]
    public EventCallback RenderParant { get; set; }
    [Inject]
    private IJSRuntime _js { get; set; }

    private void OnchangeCheckbox(string value, bool status)
    {
        HeadersFilterTable.SwitchCheckBox(Key, value, status);
        RenderParant.InvokeAsync();
    }

    private async void SwitchAllCheckBox(bool status)
    {
        HeadersFilterTable.SwitchAllCheckBox(Key, status);
        await RenderParant.InvokeAsync();
    }

    private string GetStatusClass()
    {
        if (HeadersFilterTable.HasAnyFilterOptionFalse(Key))
            return "text-danger";
        else
            return "text-success";
    }
}
